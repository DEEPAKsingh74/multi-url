chrome.runtime.onInstalled.addListener(() => { chrome.contextMenus.create({ id: "saveSelectedUrl", title: "Save selected URL", contexts: ["link", "selection"] }); }); chrome.contextMenus.onClicked.addListener((info, tab) => { if (info.menuItemId === "saveSelectedUrl") { let urlsToSave = []; if (info.linkUrl) { urlsToSave.push(info.linkUrl); } else if (info.selectionText) { const text = info.selectionText.trim(); urlsToSave = extractLinks(text); } if (urlsToSave.length > 0) { saveUrls(urlsToSave); } } }); function extractLinks(text) { if (!text || typeof text !== 'string') return []; console.log("Input text:", text); const urlRegex = /https?:\/\/[^\s"'<>]+/g; const matches = text.match(urlRegex) || []; const validUrls = []; matches.forEach(raw => { try { const url = new URL(raw); validUrls.push(url.toString()); } catch (e) { console.warn("Invalid URL skipped:", raw); } }); return [...new Set(validUrls)]; }
function saveUrls(urls) { if (!urls || !Array.isArray(urls)) return; chrome.storage.sync.get({ savedUrls: [] }, (data) => { try { const updatedUrls = [...new Set([...data.savedUrls, ...urls])]; chrome.storage.sync.set({ savedUrls: updatedUrls }, () => { console.log('URLs saved:', urls); }); } catch (error) { console.error('Error saving URLs:', error); } }); }